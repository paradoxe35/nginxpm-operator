---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: proxyhosts.nginxpm-operator.io
spec:
  group: nginxpm-operator.io
  names:
    kind: ProxyHost
    listKind: ProxyHostList
    plural: proxyhosts
    singular: proxyhost
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.id
      name: ID
      type: integer
    - jsonPath: .status.online
      name: Online
      type: boolean
    - jsonPath: .status.certificateId
      name: CertificateId
      type: string
    - jsonPath: .spec.domainNames
      name: Domains
      type: string
    - jsonPath: .status.bound
      name: Bound
      type: boolean
    name: v1
    schema:
      openAPIV3Schema:
        description: ProxyHost is the Schema for the proxyhosts API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ProxyHostSpec defines the desired state of ProxyHost
            properties:
              accessList:
                description: |-
                  AccessList configures authentication and access control for this proxy.
                  References an AccessList resource defining auth requirements and IP restrictions.
                  Leave empty for public access without authentication.
                properties:
                  accessListId:
                    description: |-
                      AccessListId directly references an existing NPM access list by ID.
                      Takes precedence over Name field.
                      Use when binding to pre-existing access lists not managed by this operator.
                    type: integer
                  name:
                    description: |-
                      Name specifies the AccessList resource to apply to this ProxyHost.
                      The AccessList defines authentication and IP-based access controls.
                      Must reference an existing AccessList in the cluster.
                    type: string
                  namespace:
                    description: |-
                      Namespace of the AccessList resource.
                      If not specified, uses the same namespace as the ProxyHost.
                      Must follow Kubernetes namespace naming conventions.
                    pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                    type: string
                type: object
              bindExisting:
                default: true
                description: |-
                  BindExisting controls the operator's behavior with existing NPM proxy hosts.
                  When true (default): Updates existing proxy hosts with matching domains.
                  When false: Always creates new proxy hosts, may cause conflicts.
                type: boolean
              blockExploits:
                default: true
                description: |-
                  BlockExploits enables common exploit protection rules.
                  Blocks various SQL injection, XSS, and other common web exploits.
                  Default is true. Only disable if it causes issues with legitimate traffic.
                type: boolean
              cachingEnabled:
                default: false
                description: |-
                  CachingEnabled activates Nginx caching for improved performance.
                  When true, static content and responses are cached according to cache headers.
                  Default is false. Enable for better performance with cacheable content.
                type: boolean
              customLocations:
                description: |-
                  CustomLocations defines path-specific forwarding rules.
                  Each location can have different upstream servers and configurations.
                  Useful for routing different paths to different backend services.
                items:
                  properties:
                    forward:
                      description: |-
                        Forward specifies the upstream configuration for this location.
                        Overrides the default forward configuration for this specific path.
                        Allows different backends for different URL paths on the same domain.
                      properties:
                        advancedConfig:
                          description: |-
                            AdvancedConfig contains raw Nginx configuration directives.
                            Injected directly into the location block. Use with caution.
                            May override operator-managed settings. For advanced users only.
                          type: string
                        hosts:
                          description: |-
                            Hosts defines explicit forwarding targets by hostname/IP and port.
                            Takes priority over Service field when both are specified.
                            Use for non-Kubernetes backends or specific host requirements.
                          items:
                            properties:
                              hostName:
                                description: |-
                                  HostName specifies the target host for forwarding requests.
                                  Accepts valid DNS names (e.g., "backend.local") or IP addresses (IPv4/IPv6).
                                  This host receives the proxied traffic from Nginx.
                                maxLength: 255
                                minLength: 1
                                pattern: ^((([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)\.)*[a-zA-Z]{2,63}|((25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)|(([0-9a-fA-F]{1,4}:){7}([0-9a-fA-F]{1,4}|:))|(::([0-9a-fA-F]{1,4}:){0,6}[0-9a-fA-F]{1,4}))$
                                type: string
                              hostPort:
                                description: |-
                                  HostPort specifies the TCP port on the target host.
                                  Must be a valid port number (1-65535).
                                  Common values: 80 (HTTP), 443 (HTTPS), 8080 (alternative HTTP).
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                            required:
                            - hostName
                            - hostPort
                            type: object
                          type: array
                        path:
                          description: |-
                            Path adds a URL path prefix to forwarded requests.
                            Example: "/api" forwards "example.com/users" to "backend/api/users".
                            Must start with "/". Leave empty to forward without path modification.
                          pattern: ^\/([a-zA-Z0-9._~-]+\/?)*$
                          type: string
                        scheme:
                          description: |-
                            Scheme defines the protocol for upstream communication.
                            "http" for unencrypted traffic, "https" for TLS-encrypted traffic.
                            Choose based on your backend service's configuration.
                          enum:
                          - http
                          - https
                          type: string
                        service:
                          description: |-
                            Service references a Kubernetes Service as the forwarding target.
                            Mutually exclusive with Hosts field.
                            The operator will resolve the Service to its ClusterIP automatically.
                          properties:
                            name:
                              description: |-
                                Name of the Kubernetes Service to forward requests to.
                                The Service's ClusterIP and port will be used as the forwarding target.
                                Supports ClusterIP and LoadBalancer service types.
                                Service must be accessible from the Nginx Proxy Manager instance.
                              maxLength: 255
                              minLength: 1
                              type: string
                            namespace:
                              description: |-
                                Namespace of the target Kubernetes Service.
                                If not specified, uses the same namespace as the ProxyHost.
                                Must follow Kubernetes namespace naming conventions.
                              pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                              type: string
                            port:
                              description: |-
                                Port overrides the Service port selection.
                                If not specified, uses the first port from the Service definition.
                                Use when the Service exposes multiple ports and you need a specific one.
                              format: int32
                              maximum: 65535
                              minimum: 1
                              type: integer
                          required:
                          - name
                          type: object
                      required:
                      - scheme
                      type: object
                    locationPath:
                      description: |-
                        LocationPath defines the URL path pattern for this custom location.
                        Must start with "/". Supports exact matches and prefix matches.
                        Example: "/api" matches all requests starting with "/api".
                      pattern: ^\/([a-zA-Z0-9._~-]+\/?)*$
                      type: string
                  required:
                  - forward
                  - locationPath
                  type: object
                type: array
              domainNames:
                description: |-
                  DomainNames lists the domains this proxy will handle.
                  Supports standard domains ("example.com"), wildcards ("*.example.com"), and ports (e.g., "example.com:8080").
                  All domains must point to the Nginx Proxy Manager instance.
                items:
                  pattern: ^(\*\.)?[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*\.[a-zA-Z]{2,}(:[0-9]{1,5})?$
                  type: string
                maxItems: 10
                minItems: 1
                type: array
              forward:
                description: |-
                  Forward defines the default upstream configuration for all requests.
                  Specifies where and how to forward incoming traffic.
                  Can be overridden for specific paths using CustomLocations.
                properties:
                  advancedConfig:
                    description: |-
                      AdvancedConfig contains raw Nginx configuration directives.
                      Injected directly into the location block. Use with caution.
                      May override operator-managed settings. For advanced users only.
                    type: string
                  hosts:
                    description: |-
                      Hosts defines explicit forwarding targets by hostname/IP and port.
                      Takes priority over Service field when both are specified.
                      Use for non-Kubernetes backends or specific host requirements.
                    items:
                      properties:
                        hostName:
                          description: |-
                            HostName specifies the target host for forwarding requests.
                            Accepts valid DNS names (e.g., "backend.local") or IP addresses (IPv4/IPv6).
                            This host receives the proxied traffic from Nginx.
                          maxLength: 255
                          minLength: 1
                          pattern: ^((([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)\.)*[a-zA-Z]{2,63}|((25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)|(([0-9a-fA-F]{1,4}:){7}([0-9a-fA-F]{1,4}|:))|(::([0-9a-fA-F]{1,4}:){0,6}[0-9a-fA-F]{1,4}))$
                          type: string
                        hostPort:
                          description: |-
                            HostPort specifies the TCP port on the target host.
                            Must be a valid port number (1-65535).
                            Common values: 80 (HTTP), 443 (HTTPS), 8080 (alternative HTTP).
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                      required:
                      - hostName
                      - hostPort
                      type: object
                    type: array
                  path:
                    description: |-
                      Path adds a URL path prefix to forwarded requests.
                      Example: "/api" forwards "example.com/users" to "backend/api/users".
                      Must start with "/". Leave empty to forward without path modification.
                    pattern: ^\/([a-zA-Z0-9._~-]+\/?)*$
                    type: string
                  scheme:
                    description: |-
                      Scheme defines the protocol for upstream communication.
                      "http" for unencrypted traffic, "https" for TLS-encrypted traffic.
                      Choose based on your backend service's configuration.
                    enum:
                    - http
                    - https
                    type: string
                  service:
                    description: |-
                      Service references a Kubernetes Service as the forwarding target.
                      Mutually exclusive with Hosts field.
                      The operator will resolve the Service to its ClusterIP automatically.
                    properties:
                      name:
                        description: |-
                          Name of the Kubernetes Service to forward requests to.
                          The Service's ClusterIP and port will be used as the forwarding target.
                          Supports ClusterIP and LoadBalancer service types.
                          Service must be accessible from the Nginx Proxy Manager instance.
                        maxLength: 255
                        minLength: 1
                        type: string
                      namespace:
                        description: |-
                          Namespace of the target Kubernetes Service.
                          If not specified, uses the same namespace as the ProxyHost.
                          Must follow Kubernetes namespace naming conventions.
                        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                        type: string
                      port:
                        description: |-
                          Port overrides the Service port selection.
                          If not specified, uses the first port from the Service definition.
                          Use when the Service exposes multiple ports and you need a specific one.
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                    required:
                    - name
                    type: object
                required:
                - scheme
                type: object
              ssl:
                description: |-
                  Ssl configures SSL/TLS settings for this proxy host.
                  Controls certificate management, HTTPS redirection, and security headers.
                  If not specified, defaults to automatic Let's Encrypt certificate.
                properties:
                  autoCertificateRequest:
                    default: false
                    description: |-
                      AutoCertificateRequest enables automatic Let's Encrypt certificate provisioning.
                      When true, NPM will automatically request and manage certificates for the domains.
                      Requires valid domain ownership and accessibility for HTTP-01 challenge.
                    type: boolean
                  certificateId:
                    description: |-
                      CertificateId directly references an existing certificate ID in NPM.
                      Highest priority - overrides all other certificate configurations.
                      Use when binding to pre-existing NPM certificates not managed by this operator.
                    type: integer
                  customCertificate:
                    description: |-
                      CustomCertificate references a managed custom SSL/TLS certificate resource.
                      Takes highest precedence - overrides both LetsEncryptCertificate and AutoCertificateRequest.
                      Use for certificates from commercial CAs or self-signed certificates.
                    properties:
                      name:
                        description: |-
                          Name specifies the CustomCertificate resource to use for SSL/TLS.
                          The referenced CustomCertificate must exist and contain valid certificate data.
                        type: string
                      namespace:
                        description: |-
                          Namespace of the CustomCertificate resource.
                          If not specified, uses the same namespace as the ProxyHost.
                          Must follow Kubernetes namespace naming conventions.
                        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    required:
                    - name
                    type: object
                  hstsEnabled:
                    default: false
                    description: |-
                      HstsEnabled activates HTTP Strict Transport Security headers.
                      HSTS forces browsers to use HTTPS and prevents protocol downgrade attacks.
                      Default is false. Enable for enhanced security on production sites.
                    type: boolean
                  hstsSubdomains:
                    default: false
                    description: |-
                      HstsSubdomains extends HSTS policy to all subdomains.
                      When true, includeSubDomains directive is added to HSTS header.
                      Only effective when HstsEnabled is true. Use with caution on shared domains.
                    type: boolean
                  http2Support:
                    default: true
                    description: |-
                      Http2Support enables HTTP/2 protocol support for improved performance.
                      HTTP/2 provides multiplexing, server push, and header compression.
                      Default is true. Disable only if clients have compatibility issues.
                    type: boolean
                  letsEncryptCertificate:
                    description: |-
                      LetsEncryptCertificate references a managed Let's Encrypt certificate resource.
                      Takes precedence over AutoCertificateRequest when specified.
                      The certificate must be valid for all domains in this ProxyHost.
                    properties:
                      name:
                        description: |-
                          Name specifies the LetsEncryptCertificate resource to use for SSL/TLS.
                          The referenced certificate must exist and be valid for the proxy domains.
                        type: string
                      namespace:
                        description: |-
                          Namespace of the LetsEncryptCertificate resource.
                          If not specified, uses the same namespace as the ProxyHost.
                          Must follow Kubernetes namespace naming conventions.
                        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    required:
                    - name
                    type: object
                  letsEncryptEmail:
                    description: |-
                      LetsEncryptEmail is the contact email for Let's Encrypt notifications.
                      Required when AutoCertificateRequest is true.
                      Receives certificate expiration and account-related notifications.
                    pattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
                    type: string
                  sslForced:
                    default: true
                    description: |-
                      SslForced enables automatic HTTP to HTTPS redirection.
                      When true (default), all HTTP requests are redirected to HTTPS.
                      Set to false to allow both HTTP and HTTPS access.
                    type: boolean
                type: object
              token:
                description: |-
                  Token references the authentication token for the Nginx Proxy Manager API.
                  If not provided, the operator will search for a token named "token-nginxpm" in:
                  1. The same namespace as this ProxyHost
                  2. The "nginxpm-operator-system" namespace
                  3. The "default" namespace
                properties:
                  name:
                    description: |-
                      Name specifies the Token resource to reference.
                      Used by other resources to authenticate with Nginx Proxy Manager.
                    type: string
                  namespace:
                    description: |-
                      Namespace of the Token resource.
                      If not specified, uses the same namespace as the referencing resource.
                      Must follow Kubernetes namespace naming conventions.
                    pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - name
                type: object
              websocketSupport:
                default: true
                description: |-
                  WebsocketSupport enables WebSocket protocol proxying.
                  Required for real-time applications using WebSocket connections.
                  Default is true. Disable only if WebSocket is not needed.
                type: boolean
            required:
            - domainNames
            - forward
            type: object
          status:
            description: ProxyHostStatus defines the observed state of ProxyHost
            properties:
              bound:
                default: false
                description: |-
                  Bound indicates if this resource was linked to an existing NPM proxy host.
                  When true, the operator found and adopted an existing proxy with matching domains.
                  When false, a new proxy host was created in NPM.
                type: boolean
              certificateId:
                description: |-
                  CertificateId indicates the SSL certificate ID currently used by this proxy.
                  References the certificate in NPM that handles HTTPS for this proxy.
                  Updated when certificates are changed or renewed.
                type: integer
              conditions:
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              id:
                description: |-
                  Id represents the unique identifier assigned by the Nginx Proxy Manager instance.
                  This field is populated after successful creation/synchronization with NPM.
                type: integer
              online:
                description: |-
                  Online reflects the proxy host's operational status in NPM.
                  True indicates the proxy is active and serving traffic.
                  False may indicate configuration errors or NPM issues.
                enum:
                - true
                - false
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
