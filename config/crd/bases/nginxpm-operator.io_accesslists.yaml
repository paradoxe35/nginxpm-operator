---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: accesslists.nginxpm-operator.io
spec:
  group: nginxpm-operator.io
  names:
    kind: AccessList
    listKind: AccessListList
    plural: accesslists
    singular: accesslist
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.id
      name: ID
      type: integer
    - jsonPath: .spec.name
      name: Name
      type: string
    - jsonPath: .status.proxyHostCount
      name: Proxy Host Count
      type: integer
    name: v1
    schema:
      openAPIV3Schema:
        description: AccessList is the Schema for the accesslists API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AccessListSpec defines the desired state of AccessList.
            properties:
              authorizations:
                description: |-
                  Authorizations defines the list of username/password pairs for HTTP Basic Authentication.
                  These credentials will be required to access resources protected by this AccessList.
                  Based on Nginx HTTP Basic Authentication module.
                items:
                  properties:
                    password:
                      description: |-
                        Password defines the authentication password for HTTP Basic Authentication.
                        This password will be paired with the username for authentication.
                        Must be between 1 and 255 characters in length.
                      maxLength: 255
                      minLength: 1
                      type: string
                    username:
                      description: |-
                        Username defines the authentication username for HTTP Basic Authentication.
                        This username will be required when accessing the protected resources.
                        Must be between 1 and 255 characters in length.
                      maxLength: 255
                      minLength: 1
                      type: string
                  required:
                  - password
                  - username
                  type: object
                type: array
              clients:
                description: |-
                  Clients defines IP-based access control rules using allow/deny directives.
                  Each entry specifies an IP address or subnet with an associated action.
                  Rules are evaluated in order. Based on Nginx HTTP Access module.
                items:
                  properties:
                    address:
                      description: |-
                        Address specifies the IPv4 address or CIDR subnet for IP-based access control.
                        Format: Single IP (e.g., "192.168.1.1") or CIDR notation (e.g., "192.168.0.0/24").
                        Used in conjunction with the Directive field to allow or deny access.
                      pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))?$
                      type: string
                    directive:
                      description: |-
                        Directive determines the access control action for the specified address.
                        "allow" permits access from the address, "deny" blocks access from the address.
                        Used with Address field to implement IP-based access control.
                      enum:
                      - allow
                      - deny
                      type: string
                  required:
                  - address
                  - directive
                  type: object
                type: array
              passAuth:
                description: |-
                  PassAuth determines whether to pass authentication headers to the upstream server.
                  When true: Basic Auth credentials are forwarded to the proxied server.
                  When false: Authentication is handled only by Nginx, credentials are not forwarded.
                  Enable this only if the upstream service also requires the authentication headers.
                enum:
                - true
                - false
                type: boolean
              satisfyAny:
                description: |-
                  SatisfyAny controls how multiple access control methods are evaluated.
                  When true: Access is granted if ANY condition is met (logical OR).
                  When false: Access requires ALL conditions to be met (logical AND).
                  This applies when both IP restrictions and Basic Auth are configured.
                enum:
                - true
                - false
                type: boolean
              token:
                description: |-
                  Token references the authentication token for the Nginx Proxy Manager API.
                  If not provided, the operator will search for a token named "token-nginxpm" in:
                  1. The same namespace as this AccessList
                  2. The "nginxpm-operator-system" namespace
                  3. The "default" namespace
                properties:
                  name:
                    description: |-
                      Name specifies the Token resource to reference.
                      Used by other resources to authenticate with Nginx Proxy Manager.
                    type: string
                  namespace:
                    description: |-
                      Namespace of the Token resource.
                      If not specified, uses the same namespace as the referencing resource.
                      Must follow Kubernetes namespace naming conventions.
                    pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - name
                type: object
            type: object
          status:
            description: AccessListStatus defines the observed state of AccessList.
            properties:
              conditions:
                description: |-
                  Conditions represent the current state of the AccessList resource.
                  Common condition types include "Ready", "Synced", and "Error".
                  The "Ready" condition indicates if the AccessList is successfully configured in NPM.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              id:
                description: |-
                  Id represents the unique identifier assigned by the Nginx Proxy Manager instance.
                  This field is populated after successful creation/synchronization with NPM.
                type: integer
              proxyHostCount:
                description: |-
                  ProxyHostCount indicates the number of ProxyHost resources currently using this AccessList.
                  This helps track AccessList usage and prevent accidental deletion of in-use lists.
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
