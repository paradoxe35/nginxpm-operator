---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: streams.nginxpm-operator.io
spec:
  group: nginxpm-operator.io
  names:
    kind: Stream
    listKind: StreamList
    plural: streams
    singular: stream
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.id
      name: ID
      type: integer
    - jsonPath: .status.online
      name: Online
      type: boolean
    - jsonPath: .status.incomingPort
      name: Incoming
      type: integer
    - jsonPath: .status.forwardingPort
      name: Forwarding
      type: integer
    - jsonPath: .spec.forward.tcpForwarding
      name: TCP
      type: boolean
    - jsonPath: .spec.forward.udpForwarding
      name: UDP
      type: boolean
    name: v1
    schema:
      openAPIV3Schema:
        description: Stream is the Schema for the streams API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: StreamSpec defines the desired state of Stream.
            properties:
              forward:
                description: |-
                  Forward defines the upstream configuration for this stream.
                  Specifies protocol support (TCP/UDP) and target hosts or services.
                  At least one protocol (TCP or UDP) must be enabled.
                properties:
                  hosts:
                    description: |-
                      Hosts defines explicit forwarding targets by hostname/IP and port.
                      Takes priority over Service field when both are specified.
                      Use for non-Kubernetes backends or load balancing across multiple hosts.
                    items:
                      properties:
                        hostName:
                          description: |-
                            HostName specifies the target host for forwarding requests.
                            Accepts valid DNS names (e.g., "backend.local") or IP addresses (IPv4/IPv6).
                            This host receives the proxied traffic from Nginx.
                          maxLength: 255
                          minLength: 1
                          pattern: ^((([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)\.)*[a-zA-Z]{2,63}|((25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)|(([0-9a-fA-F]{1,4}:){7}([0-9a-fA-F]{1,4}|:))|(::([0-9a-fA-F]{1,4}:){0,6}[0-9a-fA-F]{1,4}))$
                          type: string
                        hostPort:
                          description: |-
                            HostPort specifies the TCP port on the target host.
                            Must be a valid port number (1-65535).
                            Common values: 80 (HTTP), 443 (HTTPS), 8080 (alternative HTTP).
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                      required:
                      - hostName
                      - hostPort
                      type: object
                    type: array
                  service:
                    description: |-
                      Service references a Kubernetes Service as the forwarding target.
                      The Service's ClusterIP and port will be used for stream forwarding.
                      Mutually exclusive with Hosts field.
                    properties:
                      name:
                        description: |-
                          Name of the Kubernetes Service to forward requests to.
                          The Service's ClusterIP and port will be used as the forwarding target.
                          Supports ClusterIP and LoadBalancer service types.
                          Service must be accessible from the Nginx Proxy Manager instance.
                        maxLength: 255
                        minLength: 1
                        type: string
                      namespace:
                        description: |-
                          Namespace of the target Kubernetes Service.
                          If not specified, uses the same namespace as the ProxyHost.
                          Must follow Kubernetes namespace naming conventions.
                        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                        type: string
                      port:
                        description: |-
                          Port overrides the Service port selection.
                          If not specified, uses the first port from the Service definition.
                          Use when the Service exposes multiple ports and you need a specific one.
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                    required:
                    - name
                    type: object
                  tcpForwarding:
                    description: |-
                      TCPForwarding enables TCP protocol forwarding for this stream.
                      When true, TCP traffic on the incoming port is forwarded to the target.
                      Default is true. Set to false if only UDP forwarding is needed.
                    enum:
                    - true
                    - false
                    type: boolean
                  udpForwarding:
                    description: |-
                      UDPForwarding enables UDP protocol forwarding for this stream.
                      When true, UDP traffic on the incoming port is forwarded to the target.
                      Default is true. Set to false if only TCP forwarding is needed.
                    enum:
                    - true
                    - false
                    type: boolean
                type: object
              incomingPort:
                description: |-
                  IncomingPort defines the port where the stream will listen for connections.
                  Must be available and not in use by other services.
                  Common ranges: 1024-65535 for non-privileged ports.
                maximum: 65535
                minimum: 1
                type: integer
              overwriteIncomingPortWithForwardPort:
                description: |-
                  OverwriteIncomingPortWithForwardPort allows automatic port matching.
                  When true, the incoming port is set to match the forwarding port.
                  Useful for transparent proxying where ports should remain the same.
                enum:
                - true
                - false
                type: boolean
              ssl:
                description: |-
                  Ssl configures TLS/SSL termination for this stream.
                  Enables encrypted connections for TCP streams (not applicable to UDP).
                  Leave empty for unencrypted stream forwarding.
                properties:
                  certificateId:
                    description: |-
                      CertificateId directly references an existing certificate ID in NPM.
                      Highest priority - overrides both CustomCertificate and LetsEncryptCertificate.
                      Use when binding to pre-existing NPM certificates not managed by this operator.
                    type: integer
                  customCertificate:
                    description: |-
                      CustomCertificate references a managed custom SSL/TLS certificate resource.
                      Takes priority over LetsEncryptCertificate when both are specified.
                      Use for certificates from commercial CAs or self-signed certificates.
                    properties:
                      name:
                        description: |-
                          Name specifies the CustomCertificate resource to use for SSL/TLS.
                          The referenced CustomCertificate must exist and contain valid certificate data.
                        type: string
                      namespace:
                        description: |-
                          Namespace of the CustomCertificate resource.
                          If not specified, uses the same namespace as the ProxyHost.
                          Must follow Kubernetes namespace naming conventions.
                        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    required:
                    - name
                    type: object
                  letsEncryptCertificate:
                    description: |-
                      LetsEncryptCertificate references a managed Let's Encrypt certificate resource.
                      Enables TLS/SSL for the stream using Let's Encrypt certificates.
                      The certificate must be valid for stream usage (not just HTTP/HTTPS).
                    properties:
                      name:
                        description: |-
                          Name specifies the LetsEncryptCertificate resource to use for SSL/TLS.
                          The referenced certificate must exist and be valid for the proxy domains.
                        type: string
                      namespace:
                        description: |-
                          Namespace of the LetsEncryptCertificate resource.
                          If not specified, uses the same namespace as the ProxyHost.
                          Must follow Kubernetes namespace naming conventions.
                        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    required:
                    - name
                    type: object
                type: object
              token:
                description: |-
                  Token references the authentication token for the Nginx Proxy Manager API.
                  If not provided, the operator will search for a token named "token-nginxpm" in:
                  1. The same namespace as this Stream
                  2. The "nginxpm-operator-system" namespace
                  3. The "default" namespace
                properties:
                  name:
                    description: |-
                      Name specifies the Token resource to reference.
                      Used by other resources to authenticate with Nginx Proxy Manager.
                    type: string
                  namespace:
                    description: |-
                      Namespace of the Token resource.
                      If not specified, uses the same namespace as the referencing resource.
                      Must follow Kubernetes namespace naming conventions.
                    pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - name
                type: object
            required:
            - forward
            - incomingPort
            type: object
          status:
            description: StreamStatus defines the observed state of Stream.
            properties:
              conditions:
                description: |-
                  Conditions represent the current state of the Stream resource.
                  Common condition types include "Ready", "PortAvailable", and "Synced".
                  The "Ready" condition indicates if the stream is successfully configured and active.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              forwardingPort:
                description: |-
                  ForwardingPort shows the target port being forwarded to.
                  Reflects the actual upstream port configuration in NPM.
                  Useful for debugging connection issues.
                type: integer
              id:
                description: |-
                  Id represents the unique identifier assigned by the Nginx Proxy Manager instance.
                  This field is populated after successful stream creation in NPM.
                type: integer
              incomingPort:
                description: |-
                  IncomingPort shows the actual listening port configured in NPM.
                  May differ from spec if port conflicts were resolved.
                  This is the port clients should connect to.
                type: integer
              online:
                description: |-
                  Online reflects the stream's operational status in NPM.
                  True indicates the stream is active and forwarding traffic.
                  False may indicate configuration errors or port conflicts.
                enum:
                - true
                - false
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
