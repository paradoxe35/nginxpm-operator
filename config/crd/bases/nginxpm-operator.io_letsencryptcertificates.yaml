---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: letsencryptcertificates.nginxpm-operator.io
spec:
  group: nginxpm-operator.io
  names:
    kind: LetsEncryptCertificate
    listKind: LetsEncryptCertificateList
    plural: letsencryptcertificates
    singular: letsencryptcertificate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.id
      name: ID
      type: integer
    - jsonPath: .spec.domainNames
      name: DomainNames
      type: string
    - jsonPath: .status.bound
      name: Bound
      type: boolean
    - jsonPath: .status.expiresOn
      name: ExpiresOn
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: LetsEncryptCertificate is the Schema for the letsencryptcertificates
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LetsEncryptCertificateSpec defines the desired state of LetsEncryptCertificate
            properties:
              dnsChallenge:
                description: |-
                  DnsChallenge configures DNS-01 challenge for domain validation.
                  Required for wildcard certificates or when HTTP-01 challenge is not feasible.
                  When not specified, HTTP-01 challenge is used by default.
                properties:
                  propagationSeconds:
                    default: 0
                    description: |-
                      PropagationSeconds defines the wait time after DNS record creation before validation.
                      This allows DNS changes to propagate across name servers.
                      Default is 0, which uses the provider's default propagation time.
                    type: integer
                  provider:
                    description: |-
                      Provider specifies the DNS provider for ACME DNS-01 challenge validation.
                      Supported providers include major DNS services like Cloudflare, Route53, Azure, etc.
                      The provider determines which credentials are required in the Secret.
                    enum:
                    - acmedns
                    - aliyun
                    - azure
                    - bunny
                    - cloudflare
                    - cloudns
                    - cloudxns
                    - constellix
                    - corenetworks
                    - cpanel
                    - desec
                    - duckdns
                    - digitalocean
                    - directadmin
                    - dnsimple
                    - dnsmadeeasy
                    - dnsmulti
                    - dnspod
                    - domainoffensive
                    - domeneshop
                    - dynu
                    - easydns
                    - eurodns
                    - freedns
                    - gandi
                    - godaddy
                    - google
                    - googledomains
                    - he
                    - hetzner
                    - infomaniak
                    - inwx
                    - ionos
                    - ispconfig
                    - isset
                    - joker
                    - linode
                    - loopia
                    - luadns
                    - namecheap
                    - netcup
                    - njalla
                    - nsone
                    - oci
                    - ovh
                    - plesk
                    - porkbun
                    - powerdns
                    - regru
                    - rfc2136
                    - route53
                    - strato
                    - timeweb
                    - transip
                    - tencentcloud
                    - vultr
                    - websupport
                    type: string
                  providerCredentials:
                    description: |-
                      ProviderCredentials references the Secret containing authentication for the DNS provider.
                      Required fields in the Secret vary by provider (e.g., CF_Token for Cloudflare).
                      These credentials must have permissions to create DNS TXT records for validation.
                    properties:
                      secret:
                        description: |-
                          Secret references the Kubernetes Secret containing DNS challenge provider credentials.
                          The Secret structure depends on the DNS provider being used (e.g., API keys, tokens).
                        properties:
                          name:
                            description: |-
                              Name specifies the Kubernetes Secret containing DNS provider credentials.
                              This Secret must contain the required authentication fields for the DNS provider.
                            type: string
                        required:
                        - name
                        type: object
                    required:
                    - secret
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                required:
                - provider
                - providerCredentials
                type: object
              domainNames:
                description: |-
                  DomainNames lists the domain names to include in the Let's Encrypt certificate.
                  Supports wildcards (e.g., "*.example.com") and multiple domains.
                  All domains must be under your control for validation to succeed.
                items:
                  pattern: ^(\*\.)?[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*\.[a-zA-Z]{2,}$
                  type: string
                maxItems: 10
                minItems: 1
                type: array
              letsEncryptEmail:
                description: |-
                  LetsEncryptEmail is the contact email for Let's Encrypt account and notifications.
                  This email receives important notices about certificate expiration and account issues.
                  Must be a valid email address format.
                format: email
                pattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
                type: string
              token:
                description: |-
                  Token references the authentication token for the Nginx Proxy Manager API.
                  If not provided, the operator will search for a token named "token-nginxpm" in:
                  1. The same namespace as this LetsEncryptCertificate
                  2. The "nginxpm-operator-system" namespace
                  3. The "default" namespace
                properties:
                  name:
                    description: |-
                      Name specifies the Token resource to reference.
                      Used by other resources to authenticate with Nginx Proxy Manager.
                    type: string
                  namespace:
                    description: |-
                      Namespace of the Token resource.
                      If not specified, uses the same namespace as the referencing resource.
                      Must follow Kubernetes namespace naming conventions.
                    pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - name
                type: object
            required:
            - domainNames
            - letsEncryptEmail
            type: object
          status:
            description: LetsEncryptCertificateStatus defines the observed state of
              LetsEncryptCertificate
            properties:
              bound:
                default: false
                description: |-
                  Bound indicates if this resource was linked to an existing NPM certificate.
                  When true, the operator found and adopted an existing certificate with matching domains.
                  When false, a new certificate was created in NPM.
                type: boolean
              conditions:
                description: |-
                  Conditions represent the current state of the LetsEncryptCertificate resource.
                  Common condition types include "Ready", "Issued", "Renewing", and "ValidationFailed".
                  The "Ready" condition indicates if the certificate is successfully issued and active.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              domainNames:
                description: |-
                  DomainNames contains the actual domains in the issued certificate.
                  This is preserved in status because the certificate remains valid for these domains
                  even if spec.domainNames is modified (which would trigger a new certificate).
                items:
                  type: string
                maxItems: 10
                minItems: 1
                type: array
              expiresOn:
                description: |-
                  ExpiresOn indicates when the Let's Encrypt certificate will expire.
                  Format: ISO 8601 date-time string.
                  Let's Encrypt certificates are valid for 90 days and should be renewed before expiration.
                type: string
              id:
                description: |-
                  Id represents the unique identifier assigned by the Nginx Proxy Manager instance.
                  This field is populated after successful certificate creation in NPM.
                type: integer
            required:
            - domainNames
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
