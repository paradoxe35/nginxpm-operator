apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
    control-plane: controller-manager
  name: nginxpm-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: accesslists.nginxpm-operator.io
spec:
  group: nginxpm-operator.io
  names:
    kind: AccessList
    listKind: AccessListList
    plural: accesslists
    singular: accesslist
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.id
      name: ID
      type: integer
    - jsonPath: .spec.name
      name: Name
      type: string
    - jsonPath: .status.proxyHostCount
      name: Proxy Host Count
      type: integer
    name: v1
    schema:
      openAPIV3Schema:
        description: AccessList is the Schema for the accesslists API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AccessListSpec defines the desired state of AccessList.
            properties:
              authorizations:
                description: |-
                  Authorizations defines the list of username/password pairs for HTTP Basic Authentication.
                  These credentials will be required to access resources protected by this AccessList.
                  Based on Nginx HTTP Basic Authentication module.
                items:
                  properties:
                    password:
                      description: |-
                        Password defines the authentication password for HTTP Basic Authentication.
                        This password will be paired with the username for authentication.
                        Must be between 1 and 255 characters in length.
                      maxLength: 255
                      minLength: 1
                      type: string
                    username:
                      description: |-
                        Username defines the authentication username for HTTP Basic Authentication.
                        This username will be required when accessing the protected resources.
                        Must be between 1 and 255 characters in length.
                      maxLength: 255
                      minLength: 1
                      type: string
                  required:
                  - password
                  - username
                  type: object
                type: array
              clients:
                description: |-
                  Clients defines IP-based access control rules using allow/deny directives.
                  Each entry specifies an IP address or subnet with an associated action.
                  Rules are evaluated in order. Based on Nginx HTTP Access module.
                items:
                  properties:
                    address:
                      description: |-
                        Address specifies the IPv4 address or CIDR subnet for IP-based access control.
                        Format: Single IP (e.g., "192.168.1.1") or CIDR notation (e.g., "192.168.0.0/24").
                        Used in conjunction with the Directive field to allow or deny access.
                      pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))?$
                      type: string
                    directive:
                      description: |-
                        Directive determines the access control action for the specified address.
                        "allow" permits access from the address, "deny" blocks access from the address.
                        Used with Address field to implement IP-based access control.
                      enum:
                      - allow
                      - deny
                      type: string
                  required:
                  - address
                  - directive
                  type: object
                type: array
              passAuth:
                default: false
                description: |-
                  PassAuth determines whether to pass authentication headers to the upstream server.
                  When true: Basic Auth credentials are forwarded to the proxied server.
                  When false: Authentication is handled only by Nginx, credentials are not forwarded.
                  Enable this only if the upstream service also requires the authentication headers.
                type: boolean
              satisfyAny:
                default: false
                description: |-
                  SatisfyAny controls how multiple access control methods are evaluated.
                  When true: Access is granted if ANY condition is met (logical OR).
                  When false: Access requires ALL conditions to be met (logical AND).
                  This applies when both IP restrictions and Basic Auth are configured.
                type: boolean
              token:
                description: |-
                  Token references the authentication token for the Nginx Proxy Manager API.
                  If not provided, the operator will search for a token named "token-nginxpm" in:
                  1. The same namespace as this AccessList
                  2. The "nginxpm-operator-system" namespace
                  3. The "default" namespace
                properties:
                  name:
                    description: |-
                      Name specifies the Token resource to reference.
                      Used by other resources to authenticate with Nginx Proxy Manager.
                    type: string
                  namespace:
                    description: |-
                      Namespace of the Token resource.
                      If not specified, uses the same namespace as the referencing resource.
                      Must follow Kubernetes namespace naming conventions.
                    pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - name
                type: object
            type: object
          status:
            description: AccessListStatus defines the observed state of AccessList.
            properties:
              conditions:
                description: |-
                  Conditions represent the current state of the AccessList resource.
                  Common condition types include "Ready", "Synced", and "Error".
                  The "Ready" condition indicates if the AccessList is successfully configured in NPM.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              id:
                description: |-
                  Id represents the unique identifier assigned by the Nginx Proxy Manager instance.
                  This field is populated after successful creation/synchronization with NPM.
                type: integer
              proxyHostCount:
                default: 0
                description: |-
                  ProxyHostCount indicates the number of ProxyHost resources currently using this AccessList.
                  This helps track AccessList usage and prevent accidental deletion of in-use lists.
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: customcertificates.nginxpm-operator.io
spec:
  group: nginxpm-operator.io
  names:
    kind: CustomCertificate
    listKind: CustomCertificateList
    plural: customcertificates
    singular: customcertificate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.id
      name: ID
      type: integer
    - jsonPath: .status.expiresOn
      name: ExpiresOn
      type: string
    - jsonPath: .status.status
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: CustomCertificate is the Schema for the customcertificates API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CustomCertificateSpec defines the desired state of CustomCertificate
            properties:
              certificate:
                description: |-
                  Certificate references the Kubernetes Secret containing the SSL/TLS certificate data.
                  The Secret must include both the certificate chain and the private key.
                  This certificate will be uploaded to Nginx Proxy Manager for use with proxy hosts.
                properties:
                  secret:
                    description: |-
                      Secret references the Kubernetes Secret containing the SSL/TLS certificate.
                      The referenced Secret should contain the certificate chain and private key.
                    properties:
                      name:
                        description: |-
                          Name specifies the Kubernetes Secret containing the certificate data.
                          The Secret must contain the certificate and private key fields.
                        type: string
                    required:
                    - name
                    type: object
                required:
                - secret
                type: object
              niceName:
                description: |-
                  NiceName provides a human-readable display name for the certificate.
                  If not specified, the CustomCertificate resource name will be used.
                  This name appears in the Nginx Proxy Manager UI for easier identification.
                maxLength: 64
                type: string
              token:
                description: |-
                  Token references the authentication token for the Nginx Proxy Manager API.
                  If not provided, the operator will search for a token named "token-nginxpm" in:
                  1. The same namespace as this CustomCertificate
                  2. The "nginxpm-operator-system" namespace
                  3. The "default" namespace
                properties:
                  name:
                    description: |-
                      Name specifies the Token resource to reference.
                      Used by other resources to authenticate with Nginx Proxy Manager.
                    type: string
                  namespace:
                    description: |-
                      Namespace of the Token resource.
                      If not specified, uses the same namespace as the referencing resource.
                      Must follow Kubernetes namespace naming conventions.
                    pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - name
                type: object
            required:
            - certificate
            type: object
          status:
            description: CustomCertificateStatus defines the observed state of CustomCertificate
            properties:
              conditions:
                description: |-
                  Conditions represent the current state of the CustomCertificate resource.
                  Common condition types include "Ready", "Valid", and "Synced".
                  The "Ready" condition indicates if the certificate is successfully configured in NPM.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              expiresOn:
                description: |-
                  ExpiresOn indicates when the SSL/TLS certificate will expire.
                  Format: ISO 8601 date-time string.
                  This value is extracted from the certificate and updated during synchronization.
                type: string
              id:
                description: |-
                  Id represents the unique identifier assigned by the Nginx Proxy Manager instance.
                  This field is populated after successful certificate upload to NPM.
                type: integer
              status:
                description: |-
                  Status reflects the current state of the certificate in Nginx Proxy Manager.
                  Common values include "valid", "expired", "expiring_soon".
                  This field helps monitor certificate health and renewal requirements.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: letsencryptcertificates.nginxpm-operator.io
spec:
  group: nginxpm-operator.io
  names:
    kind: LetsEncryptCertificate
    listKind: LetsEncryptCertificateList
    plural: letsencryptcertificates
    singular: letsencryptcertificate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.id
      name: ID
      type: integer
    - jsonPath: .spec.domainNames
      name: DomainNames
      type: string
    - jsonPath: .status.bound
      name: Bound
      type: boolean
    - jsonPath: .status.expiresOn
      name: ExpiresOn
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: LetsEncryptCertificate is the Schema for the letsencryptcertificates
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LetsEncryptCertificateSpec defines the desired state of LetsEncryptCertificate
            properties:
              dnsChallenge:
                description: |-
                  DnsChallenge configures DNS-01 challenge for domain validation.
                  Required for wildcard certificates or when HTTP-01 challenge is not feasible.
                  When not specified, HTTP-01 challenge is used by default.
                properties:
                  propagationSeconds:
                    default: 0
                    description: |-
                      PropagationSeconds defines the wait time after DNS record creation before validation.
                      This allows DNS changes to propagate across name servers.
                      Default is 0, which uses the provider's default propagation time.
                    type: integer
                  provider:
                    description: |-
                      Provider specifies the DNS provider for ACME DNS-01 challenge validation.
                      Supported providers include major DNS services like Cloudflare, Route53, Azure, etc.
                      The provider determines which credentials are required in the Secret.
                    enum:
                    - acmedns
                    - aliyun
                    - azure
                    - bunny
                    - cloudflare
                    - cloudns
                    - cloudxns
                    - constellix
                    - corenetworks
                    - cpanel
                    - desec
                    - duckdns
                    - digitalocean
                    - directadmin
                    - dnsimple
                    - dnsmadeeasy
                    - dnsmulti
                    - dnspod
                    - domainoffensive
                    - domeneshop
                    - dynu
                    - easydns
                    - eurodns
                    - freedns
                    - gandi
                    - godaddy
                    - google
                    - googledomains
                    - he
                    - hetzner
                    - infomaniak
                    - inwx
                    - ionos
                    - ispconfig
                    - isset
                    - joker
                    - linode
                    - loopia
                    - luadns
                    - namecheap
                    - netcup
                    - njalla
                    - nsone
                    - oci
                    - ovh
                    - plesk
                    - porkbun
                    - powerdns
                    - regru
                    - rfc2136
                    - route53
                    - strato
                    - timeweb
                    - transip
                    - tencentcloud
                    - vultr
                    - websupport
                    type: string
                  providerCredentials:
                    description: |-
                      ProviderCredentials references the Secret containing authentication for the DNS provider.
                      Required fields in the Secret vary by provider (e.g., CF_Token for Cloudflare).
                      These credentials must have permissions to create DNS TXT records for validation.
                    properties:
                      secret:
                        description: |-
                          Secret references the Kubernetes Secret containing DNS challenge provider credentials.
                          The Secret structure depends on the DNS provider being used (e.g., API keys, tokens).
                        properties:
                          name:
                            description: |-
                              Name specifies the Kubernetes Secret containing DNS provider credentials.
                              This Secret must contain the required authentication fields for the DNS provider.
                            type: string
                        required:
                        - name
                        type: object
                    required:
                    - secret
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                required:
                - provider
                - providerCredentials
                type: object
              domainNames:
                description: |-
                  DomainNames lists the domain names to include in the Let's Encrypt certificate.
                  Supports wildcards (e.g., "*.example.com") and multiple domains.
                  All domains must be under your control for validation to succeed.
                items:
                  pattern: ^(\*\.)?[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*\.[a-zA-Z]{2,}$
                  type: string
                maxItems: 10
                minItems: 1
                type: array
              letsEncryptEmail:
                description: |-
                  LetsEncryptEmail is the contact email for Let's Encrypt account and notifications.
                  This email receives important notices about certificate expiration and account issues.
                  Must be a valid email address format.
                format: email
                pattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
                type: string
              token:
                description: |-
                  Token references the authentication token for the Nginx Proxy Manager API.
                  If not provided, the operator will search for a token named "token-nginxpm" in:
                  1. The same namespace as this LetsEncryptCertificate
                  2. The "nginxpm-operator-system" namespace
                  3. The "default" namespace
                properties:
                  name:
                    description: |-
                      Name specifies the Token resource to reference.
                      Used by other resources to authenticate with Nginx Proxy Manager.
                    type: string
                  namespace:
                    description: |-
                      Namespace of the Token resource.
                      If not specified, uses the same namespace as the referencing resource.
                      Must follow Kubernetes namespace naming conventions.
                    pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - name
                type: object
            required:
            - domainNames
            - letsEncryptEmail
            type: object
          status:
            description: LetsEncryptCertificateStatus defines the observed state of
              LetsEncryptCertificate
            properties:
              bound:
                default: false
                description: |-
                  Bound indicates if this resource was linked to an existing NPM certificate.
                  When true, the operator found and adopted an existing certificate with matching domains.
                  When false, a new certificate was created in NPM.
                type: boolean
              conditions:
                description: |-
                  Conditions represent the current state of the LetsEncryptCertificate resource.
                  Common condition types include "Ready", "Issued", "Renewing", and "ValidationFailed".
                  The "Ready" condition indicates if the certificate is successfully issued and active.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              domainNames:
                description: |-
                  DomainNames contains the actual domains in the issued certificate.
                  This is preserved in status because the certificate remains valid for these domains
                  even if spec.domainNames is modified (which would trigger a new certificate).
                items:
                  type: string
                maxItems: 10
                minItems: 1
                type: array
              expiresOn:
                description: |-
                  ExpiresOn indicates when the Let's Encrypt certificate will expire.
                  Format: ISO 8601 date-time string.
                  Let's Encrypt certificates are valid for 90 days and should be renewed before expiration.
                type: string
              id:
                description: |-
                  Id represents the unique identifier assigned by the Nginx Proxy Manager instance.
                  This field is populated after successful certificate creation in NPM.
                type: integer
            required:
            - domainNames
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: proxyhosts.nginxpm-operator.io
spec:
  group: nginxpm-operator.io
  names:
    kind: ProxyHost
    listKind: ProxyHostList
    plural: proxyhosts
    singular: proxyhost
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.id
      name: ID
      type: integer
    - jsonPath: .status.online
      name: Online
      type: boolean
    - jsonPath: .status.certificateId
      name: CertificateId
      type: string
    - jsonPath: .spec.domainNames
      name: Domains
      type: string
    - jsonPath: .status.bound
      name: Bound
      type: boolean
    name: v1
    schema:
      openAPIV3Schema:
        description: ProxyHost is the Schema for the proxyhosts API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ProxyHostSpec defines the desired state of ProxyHost
            properties:
              accessList:
                description: |-
                  AccessList configures authentication and access control for this proxy.
                  References an AccessList resource defining auth requirements and IP restrictions.
                  Leave empty for public access without authentication.
                properties:
                  accessListId:
                    description: |-
                      AccessListId directly references an existing NPM access list by ID.
                      Takes precedence over Name field.
                      Use when binding to pre-existing access lists not managed by this operator.
                    type: integer
                  name:
                    description: |-
                      Name specifies the AccessList resource to apply to this ProxyHost.
                      The AccessList defines authentication and IP-based access controls.
                      Must reference an existing AccessList in the cluster.
                    type: string
                  namespace:
                    description: |-
                      Namespace of the AccessList resource.
                      If not specified, uses the same namespace as the ProxyHost.
                      Must follow Kubernetes namespace naming conventions.
                    pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                    type: string
                type: object
              bindExisting:
                default: true
                description: |-
                  BindExisting controls the operator's behavior with existing NPM proxy hosts.
                  When true (default): Updates existing proxy hosts with matching domains.
                  When false: Always creates new proxy hosts, may cause conflicts.
                type: boolean
              blockExploits:
                default: true
                description: |-
                  BlockExploits enables common exploit protection rules.
                  Blocks various SQL injection, XSS, and other common web exploits.
                  Default is true. Only disable if it causes issues with legitimate traffic.
                type: boolean
              cachingEnabled:
                default: false
                description: |-
                  CachingEnabled activates Nginx caching for improved performance.
                  When true, static content and responses are cached according to cache headers.
                  Default is false. Enable for better performance with cacheable content.
                type: boolean
              customLocations:
                description: |-
                  CustomLocations defines path-specific forwarding rules.
                  Each location can have different upstream servers and configurations.
                  Useful for routing different paths to different backend services.
                items:
                  properties:
                    forward:
                      description: |-
                        Forward specifies the upstream configuration for this location.
                        Overrides the default forward configuration for this specific path.
                        Allows different backends for different URL paths on the same domain.
                      properties:
                        advancedConfig:
                          description: |-
                            AdvancedConfig contains raw Nginx configuration directives.
                            Injected directly into the location block. Use with caution.
                            May override operator-managed settings. For advanced users only.
                          type: string
                        hosts:
                          description: |-
                            Hosts defines explicit forwarding targets by hostname/IP and port.
                            Takes priority over Service field when both are specified.
                            Use for non-Kubernetes backends or specific host requirements.
                          items:
                            properties:
                              hostName:
                                description: |-
                                  HostName specifies the target host for forwarding requests.
                                  Accepts valid DNS names (e.g., "backend.local") or IP addresses (IPv4/IPv6).
                                  This host receives the proxied traffic from Nginx.
                                maxLength: 255
                                minLength: 1
                                pattern: ^((([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)\.)*[a-zA-Z]{2,63}|((25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)|(([0-9a-fA-F]{1,4}:){7}([0-9a-fA-F]{1,4}|:))|(::([0-9a-fA-F]{1,4}:){0,6}[0-9a-fA-F]{1,4}))$
                                type: string
                              hostPort:
                                description: |-
                                  HostPort specifies the TCP port on the target host.
                                  Must be a valid port number (1-65535).
                                  Common values: 80 (HTTP), 443 (HTTPS), 8080 (alternative HTTP).
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                            required:
                            - hostName
                            - hostPort
                            type: object
                          type: array
                        nginxVariable:
                          description: |-
                            NginxVariable is the name of the nginx variable that will be used to store the forwarding target.
                            This is useful when you want to use a dynamic forwarding targetS in the advancedConfig.
                          pattern: ^\$[a-zA-Z_][a-zA-Z0-9_]*$
                          type: string
                        path:
                          description: |-
                            Path adds a URL path prefix to forwarded requests.
                            Example: "/api" forwards "example.com/users" to "backend/api/users".
                            Must start with "/". Leave empty to forward without path modification.
                          pattern: ^\/([a-zA-Z0-9._~-]+\/?)*$
                          type: string
                        scheme:
                          description: |-
                            Scheme defines the protocol for upstream communication.
                            "http" for unencrypted traffic, "https" for TLS-encrypted traffic.
                            Choose based on your backend service's configuration.
                          enum:
                          - http
                          - https
                          type: string
                        service:
                          description: |-
                            Service references a Kubernetes Service as the forwarding target.
                            Mutually exclusive with Hosts field.
                            The operator will resolve the Service to its ClusterIP automatically.
                          properties:
                            name:
                              description: |-
                                Name of the Kubernetes Service to forward requests to.
                                The Service's ClusterIP and port will be used as the forwarding target.
                                Supports ClusterIP, LoadBalancer, and NodePort (recommended) service types.
                                Service must be accessible from the Nginx Proxy Manager instance.
                              maxLength: 255
                              minLength: 1
                              type: string
                            namespace:
                              description: |-
                                Namespace of the target Kubernetes Service.
                                If not specified, uses the same namespace as the ProxyHost.
                                Must follow Kubernetes namespace naming conventions.
                              pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                              type: string
                            port:
                              description: |-
                                Port overrides the Service port selection.
                                If not specified, uses the first port from the Service definition.
                                Use when the Service exposes multiple ports and you need a specific one.
                              format: int32
                              maximum: 65535
                              minimum: 1
                              type: integer
                            portName:
                              description: |-
                                Port name of the target Kubernetes Service.
                                If not specified, uses the first port from the Service definition.
                                Use when the Service exposes multiple ports and you need a specific one.
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - scheme
                      type: object
                    locationPath:
                      description: |-
                        LocationPath defines the URL path pattern for this custom location.
                        Must start with "/". Supports exact matches and prefix matches.
                        Example: "/api" matches all requests starting with "/api".
                      pattern: ^\/([a-zA-Z0-9._~-]+\/?)*$
                      type: string
                  required:
                  - forward
                  - locationPath
                  type: object
                type: array
              domainNames:
                description: |-
                  DomainNames lists the domains this proxy will handle.
                  Supports standard domains ("example.com") and wildcards ("*.example.com").
                  All domains must point to the Nginx Proxy Manager instance.
                items:
                  pattern: ^(\*\.)?[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*\.[a-zA-Z]{2,}$
                  type: string
                maxItems: 10
                minItems: 1
                type: array
              forward:
                description: |-
                  Forward defines the default upstream configuration for all requests.
                  Specifies where and how to forward incoming traffic.
                  Can be overridden for specific paths using CustomLocations.
                properties:
                  advancedConfig:
                    description: |-
                      AdvancedConfig contains raw Nginx configuration directives.
                      Injected directly into the location block. Use with caution.
                      May override operator-managed settings. For advanced users only.
                    type: string
                  hosts:
                    description: |-
                      Hosts defines explicit forwarding targets by hostname/IP and port.
                      Takes priority over Service field when both are specified.
                      Use for non-Kubernetes backends or specific host requirements.
                    items:
                      properties:
                        hostName:
                          description: |-
                            HostName specifies the target host for forwarding requests.
                            Accepts valid DNS names (e.g., "backend.local") or IP addresses (IPv4/IPv6).
                            This host receives the proxied traffic from Nginx.
                          maxLength: 255
                          minLength: 1
                          pattern: ^((([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)\.)*[a-zA-Z]{2,63}|((25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)|(([0-9a-fA-F]{1,4}:){7}([0-9a-fA-F]{1,4}|:))|(::([0-9a-fA-F]{1,4}:){0,6}[0-9a-fA-F]{1,4}))$
                          type: string
                        hostPort:
                          description: |-
                            HostPort specifies the TCP port on the target host.
                            Must be a valid port number (1-65535).
                            Common values: 80 (HTTP), 443 (HTTPS), 8080 (alternative HTTP).
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                      required:
                      - hostName
                      - hostPort
                      type: object
                    type: array
                  nginxVariable:
                    description: |-
                      NginxVariable is the name of the nginx variable that will be used to store the forwarding target.
                      This is useful when you want to use a dynamic forwarding targetS in the advancedConfig.
                    pattern: ^\$[a-zA-Z_][a-zA-Z0-9_]*$
                    type: string
                  path:
                    description: |-
                      Path adds a URL path prefix to forwarded requests.
                      Example: "/api" forwards "example.com/users" to "backend/api/users".
                      Must start with "/". Leave empty to forward without path modification.
                    pattern: ^\/([a-zA-Z0-9._~-]+\/?)*$
                    type: string
                  scheme:
                    description: |-
                      Scheme defines the protocol for upstream communication.
                      "http" for unencrypted traffic, "https" for TLS-encrypted traffic.
                      Choose based on your backend service's configuration.
                    enum:
                    - http
                    - https
                    type: string
                  service:
                    description: |-
                      Service references a Kubernetes Service as the forwarding target.
                      Mutually exclusive with Hosts field.
                      The operator will resolve the Service to its ClusterIP automatically.
                    properties:
                      name:
                        description: |-
                          Name of the Kubernetes Service to forward requests to.
                          The Service's ClusterIP and port will be used as the forwarding target.
                          Supports ClusterIP, LoadBalancer, and NodePort (recommended) service types.
                          Service must be accessible from the Nginx Proxy Manager instance.
                        maxLength: 255
                        minLength: 1
                        type: string
                      namespace:
                        description: |-
                          Namespace of the target Kubernetes Service.
                          If not specified, uses the same namespace as the ProxyHost.
                          Must follow Kubernetes namespace naming conventions.
                        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                        type: string
                      port:
                        description: |-
                          Port overrides the Service port selection.
                          If not specified, uses the first port from the Service definition.
                          Use when the Service exposes multiple ports and you need a specific one.
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                      portName:
                        description: |-
                          Port name of the target Kubernetes Service.
                          If not specified, uses the first port from the Service definition.
                          Use when the Service exposes multiple ports and you need a specific one.
                        type: string
                    required:
                    - name
                    type: object
                required:
                - scheme
                type: object
              ssl:
                description: |-
                  Ssl configures SSL/TLS settings for this proxy host.
                  Controls certificate management, HTTPS redirection, and security headers.
                  If not specified, defaults to automatic Let's Encrypt certificate.
                properties:
                  autoCertificateRequest:
                    default: false
                    description: |-
                      AutoCertificateRequest enables automatic Let's Encrypt certificate provisioning.
                      When true, NPM will automatically request and manage certificates for the domains.
                      Requires valid domain ownership and accessibility for HTTP-01 challenge.
                    type: boolean
                  certificateId:
                    description: |-
                      CertificateId directly references an existing certificate ID in NPM.
                      Highest priority - overrides all other certificate configurations.
                      Use when binding to pre-existing NPM certificates not managed by this operator.
                    type: integer
                  customCertificate:
                    description: |-
                      CustomCertificate references a managed custom SSL/TLS certificate resource.
                      Takes highest precedence - overrides both LetsEncryptCertificate and AutoCertificateRequest.
                      Use for certificates from commercial CAs or self-signed certificates.
                    properties:
                      name:
                        description: |-
                          Name specifies the CustomCertificate resource to use for SSL/TLS.
                          The referenced CustomCertificate must exist and contain valid certificate data.
                        type: string
                      namespace:
                        description: |-
                          Namespace of the CustomCertificate resource.
                          If not specified, uses the same namespace as the ProxyHost.
                          Must follow Kubernetes namespace naming conventions.
                        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    required:
                    - name
                    type: object
                  hstsEnabled:
                    default: false
                    description: |-
                      HstsEnabled activates HTTP Strict Transport Security headers.
                      HSTS forces browsers to use HTTPS and prevents protocol downgrade attacks.
                      Default is false. Enable for enhanced security on production sites.
                    type: boolean
                  hstsSubdomains:
                    default: false
                    description: |-
                      HstsSubdomains extends HSTS policy to all subdomains.
                      When true, includeSubDomains directive is added to HSTS header.
                      Only effective when HstsEnabled is true. Use with caution on shared domains.
                    type: boolean
                  http2Support:
                    default: true
                    description: |-
                      Http2Support enables HTTP/2 protocol support for improved performance.
                      HTTP/2 provides multiplexing, server push, and header compression.
                      Default is true. Disable only if clients have compatibility issues.
                    type: boolean
                  letsEncryptCertificate:
                    description: |-
                      LetsEncryptCertificate references a managed Let's Encrypt certificate resource.
                      Takes precedence over AutoCertificateRequest when specified.
                      The certificate must be valid for all domains in this ProxyHost.
                    properties:
                      name:
                        description: |-
                          Name specifies the LetsEncryptCertificate resource to use for SSL/TLS.
                          The referenced certificate must exist and be valid for the proxy domains.
                        type: string
                      namespace:
                        description: |-
                          Namespace of the LetsEncryptCertificate resource.
                          If not specified, uses the same namespace as the ProxyHost.
                          Must follow Kubernetes namespace naming conventions.
                        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    required:
                    - name
                    type: object
                  letsEncryptEmail:
                    description: |-
                      LetsEncryptEmail is the contact email for Let's Encrypt notifications.
                      Required when AutoCertificateRequest is true.
                      Receives certificate expiration and account-related notifications.
                    pattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
                    type: string
                  sslForced:
                    default: true
                    description: |-
                      SslForced enables automatic HTTP to HTTPS redirection.
                      When true (default), all HTTP requests are redirected to HTTPS.
                      Set to false to allow both HTTP and HTTPS access.
                    type: boolean
                type: object
              token:
                description: |-
                  Token references the authentication token for the Nginx Proxy Manager API.
                  If not provided, the operator will search for a token named "token-nginxpm" in:
                  1. The same namespace as this ProxyHost
                  2. The "nginxpm-operator-system" namespace
                  3. The "default" namespace
                properties:
                  name:
                    description: |-
                      Name specifies the Token resource to reference.
                      Used by other resources to authenticate with Nginx Proxy Manager.
                    type: string
                  namespace:
                    description: |-
                      Namespace of the Token resource.
                      If not specified, uses the same namespace as the referencing resource.
                      Must follow Kubernetes namespace naming conventions.
                    pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - name
                type: object
              websocketSupport:
                default: true
                description: |-
                  WebsocketSupport enables WebSocket protocol proxying.
                  Required for real-time applications using WebSocket connections.
                  Default is true. Disable only if WebSocket is not needed.
                type: boolean
            required:
            - domainNames
            - forward
            type: object
          status:
            description: ProxyHostStatus defines the observed state of ProxyHost
            properties:
              bound:
                default: false
                description: |-
                  Bound indicates if this resource was linked to an existing NPM proxy host.
                  When true, the operator found and adopted an existing proxy with matching domains.
                  When false, a new proxy host was created in NPM.
                type: boolean
              certificateId:
                description: |-
                  CertificateId indicates the SSL certificate ID currently used by this proxy.
                  References the certificate in NPM that handles HTTPS for this proxy.
                  Updated when certificates are changed or renewed.
                type: integer
              conditions:
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              id:
                description: |-
                  Id represents the unique identifier assigned by the Nginx Proxy Manager instance.
                  This field is populated after successful creation/synchronization with NPM.
                type: integer
              initialConfiguration:
                description: |-
                  InitialConfiguration stores the original NPM proxy host configuration
                  captured when binding to an existing proxy host. This is used to restore
                  the original settings when the resource is deleted and was bound to an
                  existing NPM proxy host.
                properties:
                  accessListId:
                    description: AccessListId from the original configuration
                    type: integer
                  advancedConfig:
                    description: AdvancedConfig from the original configuration
                    type: string
                  allowWebsocketUpgrade:
                    description: AllowWebsocketUpgrade from the original configuration
                    type: boolean
                  blockExploits:
                    description: BlockExploits from the original configuration
                    type: boolean
                  cachingEnabled:
                    description: CachingEnabled from the original configuration
                    type: boolean
                  certificateId:
                    description: CertificateId from the original configuration
                    type: integer
                  domainNames:
                    description: DomainNames from the original NPM configuration
                    items:
                      type: string
                    type: array
                  enabled:
                    description: Enabled status from the original configuration
                    type: boolean
                  forwardHost:
                    description: ForwardHost from the original configuration
                    type: string
                  forwardPort:
                    description: ForwardPort from the original configuration
                    type: integer
                  forwardScheme:
                    description: ForwardScheme from the original configuration
                    type: string
                  hstsEnabled:
                    description: HSTSEnabled from the original configuration
                    type: boolean
                  hstsSubdomains:
                    description: HSTSSubdomains from the original configuration
                    type: boolean
                  http2Support:
                    description: HTTP2Support from the original configuration
                    type: boolean
                  locations:
                    description: Locations from the original configuration
                    items:
                      description: ProxyHostLocationConfig stores original location
                        configuration
                      properties:
                        advancedConfig:
                          type: string
                        forwardHost:
                          type: string
                        forwardPort:
                          type: integer
                        forwardScheme:
                          type: string
                        path:
                          type: string
                      type: object
                    type: array
                  sslForced:
                    description: SSLForced from the original configuration
                    type: boolean
                type: object
              online:
                default: false
                description: |-
                  Online reflects the proxy host's operational status in NPM.
                  True indicates the proxy is active and serving traffic.
                  False may indicate configuration errors or NPM issues.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: streams.nginxpm-operator.io
spec:
  group: nginxpm-operator.io
  names:
    kind: Stream
    listKind: StreamList
    plural: streams
    singular: stream
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.id
      name: ID
      type: integer
    - jsonPath: .status.online
      name: Online
      type: boolean
    - jsonPath: .status.incomingPort
      name: Incoming
      type: integer
    - jsonPath: .status.forwardingPort
      name: Forwarding
      type: integer
    - jsonPath: .spec.forward.tcpForwarding
      name: TCP
      type: boolean
    - jsonPath: .spec.forward.udpForwarding
      name: UDP
      type: boolean
    name: v1
    schema:
      openAPIV3Schema:
        description: Stream is the Schema for the streams API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: StreamSpec defines the desired state of Stream.
            properties:
              forward:
                description: |-
                  Forward defines the upstream configuration for this stream.
                  Specifies protocol support (TCP/UDP) and target hosts or services.
                  At least one protocol (TCP or UDP) must be enabled.
                properties:
                  hosts:
                    description: |-
                      Hosts defines explicit forwarding targets by hostname/IP and port.
                      Takes priority over Service field when both are specified.
                      Use for non-Kubernetes backends or load balancing across multiple hosts.
                    items:
                      properties:
                        hostName:
                          description: |-
                            HostName specifies the target host for forwarding requests.
                            Accepts valid DNS names (e.g., "backend.local") or IP addresses (IPv4/IPv6).
                            This host receives the proxied traffic from Nginx.
                          maxLength: 255
                          minLength: 1
                          pattern: ^((([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)\.)*[a-zA-Z]{2,63}|((25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)|(([0-9a-fA-F]{1,4}:){7}([0-9a-fA-F]{1,4}|:))|(::([0-9a-fA-F]{1,4}:){0,6}[0-9a-fA-F]{1,4}))$
                          type: string
                        hostPort:
                          description: |-
                            HostPort specifies the TCP port on the target host.
                            Must be a valid port number (1-65535).
                            Common values: 80 (HTTP), 443 (HTTPS), 8080 (alternative HTTP).
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                      required:
                      - hostName
                      - hostPort
                      type: object
                    type: array
                  service:
                    description: |-
                      Service references a Kubernetes Service as the forwarding target.
                      The Service's ClusterIP and port will be used for stream forwarding.
                      Mutually exclusive with Hosts field.
                    properties:
                      name:
                        description: |-
                          Name of the Kubernetes Service to forward requests to.
                          The Service's ClusterIP and port will be used as the forwarding target.
                          Supports ClusterIP, LoadBalancer, and NodePort (recommended) service types.
                          Service must be accessible from the Nginx Proxy Manager instance.
                        maxLength: 255
                        minLength: 1
                        type: string
                      namespace:
                        description: |-
                          Namespace of the target Kubernetes Service.
                          If not specified, uses the same namespace as the ProxyHost.
                          Must follow Kubernetes namespace naming conventions.
                        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                        type: string
                      port:
                        description: |-
                          Port overrides the Service port selection.
                          If not specified, uses the first port from the Service definition.
                          Use when the Service exposes multiple ports and you need a specific one.
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                      portName:
                        description: |-
                          Port name of the target Kubernetes Service.
                          If not specified, uses the first port from the Service definition.
                          Use when the Service exposes multiple ports and you need a specific one.
                        type: string
                    required:
                    - name
                    type: object
                  tcpForwarding:
                    default: true
                    description: |-
                      TCPForwarding enables TCP protocol forwarding for this stream.
                      When true, TCP traffic on the incoming port is forwarded to the target.
                      Default is true. Set to false if only UDP forwarding is needed.
                    type: boolean
                  udpForwarding:
                    default: true
                    description: |-
                      UDPForwarding enables UDP protocol forwarding for this stream.
                      When true, UDP traffic on the incoming port is forwarded to the target.
                      Default is true. Set to false if only TCP forwarding is needed.
                    type: boolean
                type: object
              incomingPort:
                description: |-
                  IncomingPort defines the port where the stream will listen for connections.
                  Must be available and not in use by other services.
                  Common ranges: 1024-65535 for non-privileged ports.
                maximum: 65535
                minimum: 1
                type: integer
              overwriteIncomingPortWithForwardPort:
                default: false
                description: |-
                  OverwriteIncomingPortWithForwardPort allows automatic port matching.
                  When true, the incoming port is set to match the forwarding port.
                  Useful for transparent proxying where ports should remain the same.
                type: boolean
              ssl:
                description: |-
                  Ssl configures TLS/SSL termination for this stream.
                  Enables encrypted connections for TCP streams (not applicable to UDP).
                  Leave empty for unencrypted stream forwarding.
                properties:
                  certificateId:
                    description: |-
                      CertificateId directly references an existing certificate ID in NPM.
                      Highest priority - overrides both CustomCertificate and LetsEncryptCertificate.
                      Use when binding to pre-existing NPM certificates not managed by this operator.
                    type: integer
                  customCertificate:
                    description: |-
                      CustomCertificate references a managed custom SSL/TLS certificate resource.
                      Takes priority over LetsEncryptCertificate when both are specified.
                      Use for certificates from commercial CAs or self-signed certificates.
                    properties:
                      name:
                        description: |-
                          Name specifies the CustomCertificate resource to use for SSL/TLS.
                          The referenced CustomCertificate must exist and contain valid certificate data.
                        type: string
                      namespace:
                        description: |-
                          Namespace of the CustomCertificate resource.
                          If not specified, uses the same namespace as the ProxyHost.
                          Must follow Kubernetes namespace naming conventions.
                        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    required:
                    - name
                    type: object
                  letsEncryptCertificate:
                    description: |-
                      LetsEncryptCertificate references a managed Let's Encrypt certificate resource.
                      Enables TLS/SSL for the stream using Let's Encrypt certificates.
                      The certificate must be valid for stream usage (not just HTTP/HTTPS).
                    properties:
                      name:
                        description: |-
                          Name specifies the LetsEncryptCertificate resource to use for SSL/TLS.
                          The referenced certificate must exist and be valid for the proxy domains.
                        type: string
                      namespace:
                        description: |-
                          Namespace of the LetsEncryptCertificate resource.
                          If not specified, uses the same namespace as the ProxyHost.
                          Must follow Kubernetes namespace naming conventions.
                        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    required:
                    - name
                    type: object
                type: object
              token:
                description: |-
                  Token references the authentication token for the Nginx Proxy Manager API.
                  If not provided, the operator will search for a token named "token-nginxpm" in:
                  1. The same namespace as this Stream
                  2. The "nginxpm-operator-system" namespace
                  3. The "default" namespace
                properties:
                  name:
                    description: |-
                      Name specifies the Token resource to reference.
                      Used by other resources to authenticate with Nginx Proxy Manager.
                    type: string
                  namespace:
                    description: |-
                      Namespace of the Token resource.
                      If not specified, uses the same namespace as the referencing resource.
                      Must follow Kubernetes namespace naming conventions.
                    pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - name
                type: object
            required:
            - forward
            - incomingPort
            type: object
          status:
            description: StreamStatus defines the observed state of Stream.
            properties:
              conditions:
                description: |-
                  Conditions represent the current state of the Stream resource.
                  Common condition types include "Ready", "PortAvailable", and "Synced".
                  The "Ready" condition indicates if the stream is successfully configured and active.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              forwardingPort:
                description: |-
                  ForwardingPort shows the target port being forwarded to.
                  Reflects the actual upstream port configuration in NPM.
                  Useful for debugging connection issues.
                type: integer
              id:
                description: |-
                  Id represents the unique identifier assigned by the Nginx Proxy Manager instance.
                  This field is populated after successful stream creation in NPM.
                type: integer
              incomingPort:
                description: |-
                  IncomingPort shows the actual listening port configured in NPM.
                  May differ from spec if port conflicts were resolved.
                  This is the port clients should connect to.
                type: integer
              online:
                default: false
                description: |-
                  Online reflects the stream's operational status in NPM.
                  True indicates the stream is active and forwarding traffic.
                  False may indicate configuration errors or port conflicts.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: tokens.nginxpm-operator.io
spec:
  group: nginxpm-operator.io
  names:
    kind: Token
    listKind: TokenList
    plural: tokens
    singular: token
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.secret.secretName
      name: Secret
      type: string
    - jsonPath: .status.expires
      name: Expires
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Token is the Schema for the tokens API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TokenSpec defines the desired state of Token
            properties:
              endpoint:
                description: |-
                  Endpoint is the base URL of the Nginx Proxy Manager instance.
                  Format: "http(s)://hostname:port" (e.g., "https://npm.example.com:81").
                  This is where the operator will send API requests.
                maxLength: 255
                minLength: 1
                pattern: ^(https?):\/\/([a-zA-Z0-9-]+\.)+[a-zA-Z]{2,}(:[0-9]{1,5})?$
                type: string
              secret:
                description: |-
                  Secret references the Kubernetes Secret containing authentication credentials.
                  The Secret must include "identity" and "secret" data fields.
                  These credentials are used to obtain and refresh NPM API tokens.
                properties:
                  secretName:
                    description: |-
                      SecretName references the Kubernetes Secret containing NPM credentials.
                      The Secret must contain "identity" and "secret" fields.
                      These credentials are used to authenticate with the NPM API.
                    maxLength: 255
                    minLength: 1
                    type: string
                required:
                - secretName
                type: object
            required:
            - endpoint
            - secret
            type: object
          status:
            description: TokenStatus defines the observed state of Token
            properties:
              conditions:
                description: |-
                  Conditions represent the current state of the Token resource.
                  Common condition types include "Ready", "Authenticated", and "TokenExpiring".
                  The "Ready" condition indicates if the token is valid and usable for API calls.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              expires:
                description: |-
                  Expires indicates when the current JWT token will expire.
                  The operator automatically refreshes tokens before expiration.
                  Format: Kubernetes metav1.Time (RFC3339).
                format: date-time
                type: string
              token:
                description: |-
                  Token contains the JWT authentication token from Nginx Proxy Manager.
                  This token is automatically generated and refreshed by the operator.
                  Used internally for API authentication - do not modify manually.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
  name: nginxpm-operator-controller-manager
  namespace: nginxpm-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
  name: nginxpm-operator-leader-election-role
  namespace: nginxpm-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
  name: nginxpm-operator-accesslist-admin-role
rules:
- apiGroups:
  - nginxpm-operator.io
  resources:
  - accesslists
  verbs:
  - '*'
- apiGroups:
  - nginxpm-operator.io
  resources:
  - accesslists/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
  name: nginxpm-operator-accesslist-editor-role
rules:
- apiGroups:
  - nginxpm-operator.io
  resources:
  - accesslists
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - nginxpm-operator.io
  resources:
  - accesslists/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
  name: nginxpm-operator-accesslist-viewer-role
rules:
- apiGroups:
  - nginxpm-operator.io
  resources:
  - accesslists
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - nginxpm-operator.io
  resources:
  - accesslists/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
  name: nginxpm-operator-customcertificate-editor-role
rules:
- apiGroups:
  - nginxpm-operator.io
  resources:
  - customcertificates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - nginxpm-operator.io
  resources:
  - customcertificates/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
  name: nginxpm-operator-customcertificate-viewer-role
rules:
- apiGroups:
  - nginxpm-operator.io
  resources:
  - customcertificates
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - nginxpm-operator.io
  resources:
  - customcertificates/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
  name: nginxpm-operator-letsencryptcertificate-editor-role
rules:
- apiGroups:
  - nginxpm-operator.io
  resources:
  - letsencryptcertificates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - nginxpm-operator.io
  resources:
  - letsencryptcertificates/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
  name: nginxpm-operator-letsencryptcertificate-viewer-role
rules:
- apiGroups:
  - nginxpm-operator.io
  resources:
  - letsencryptcertificates
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - nginxpm-operator.io
  resources:
  - letsencryptcertificates/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nginxpm-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  - pods
  - secrets
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  - pods/status
  - services/status
  verbs:
  - get
- apiGroups:
  - nginxpm-operator.io
  resources:
  - accesslist
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - nginxpm-operator.io
  resources:
  - accesslist/status
  verbs:
  - get
- apiGroups:
  - nginxpm-operator.io
  resources:
  - accesslists
  - customcertificates
  - letsencryptcertificates
  - proxyhosts
  - streams
  - tokens
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - nginxpm-operator.io
  resources:
  - accesslists/finalizers
  - customcertificates/finalizers
  - letsencryptcertificates/finalizers
  - proxyhosts/finalizers
  - streams/finalizers
  - tokens/finalizers
  verbs:
  - update
- apiGroups:
  - nginxpm-operator.io
  resources:
  - accesslists/status
  - customcertificates/status
  - letsencryptcertificates/status
  - proxyhosts/status
  - streams/status
  - tokens/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nginxpm-operator-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nginxpm-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
  name: nginxpm-operator-proxyhost-editor-role
rules:
- apiGroups:
  - nginxpm-operator.io
  resources:
  - proxyhosts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - nginxpm-operator.io
  resources:
  - proxyhosts/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
  name: nginxpm-operator-proxyhost-viewer-role
rules:
- apiGroups:
  - nginxpm-operator.io
  resources:
  - proxyhosts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - nginxpm-operator.io
  resources:
  - proxyhosts/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
  name: nginxpm-operator-stream-admin-role
rules:
- apiGroups:
  - nginxpm-operator.io
  resources:
  - streams
  verbs:
  - '*'
- apiGroups:
  - nginxpm-operator.io
  resources:
  - streams/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
  name: nginxpm-operator-stream-editor-role
rules:
- apiGroups:
  - nginxpm-operator.io
  resources:
  - streams
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - nginxpm-operator.io
  resources:
  - streams/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
  name: nginxpm-operator-stream-viewer-role
rules:
- apiGroups:
  - nginxpm-operator.io
  resources:
  - streams
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - nginxpm-operator.io
  resources:
  - streams/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
  name: nginxpm-operator-token-editor-role
rules:
- apiGroups:
  - nginxpm-operator.io
  resources:
  - tokens
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - nginxpm-operator.io
  resources:
  - tokens/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
  name: nginxpm-operator-token-viewer-role
rules:
- apiGroups:
  - nginxpm-operator.io
  resources:
  - tokens
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - nginxpm-operator.io
  resources:
  - tokens/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
  name: nginxpm-operator-leader-election-rolebinding
  namespace: nginxpm-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginxpm-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: nginxpm-operator-controller-manager
  namespace: nginxpm-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
  name: nginxpm-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginxpm-operator-manager-role
subjects:
- kind: ServiceAccount
  name: nginxpm-operator-controller-manager
  namespace: nginxpm-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nginxpm-operator-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginxpm-operator-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: nginxpm-operator-controller-manager
  namespace: nginxpm-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
    control-plane: controller-manager
  name: nginxpm-operator-controller-manager-metrics-service
  namespace: nginxpm-operator-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginxpm-operator
    control-plane: controller-manager
  name: nginxpm-operator-controller-manager
  namespace: nginxpm-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --leader-elect
        - --health-probe-bind-address=:8081
        command:
        - /manager
        image: ghcr.io/paradoxe35/nginxpm-operator:v0.2.4
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: nginxpm-operator-controller-manager
      terminationGracePeriodSeconds: 10
